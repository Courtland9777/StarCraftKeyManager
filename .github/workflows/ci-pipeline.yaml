name: CI and Release Pipeline

on:
  push:
    branches:
      - master
      - develop
    tags:
      - 'v*' # Trigger on version tags (e.g., v1.0.0)
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Project
        run: dotnet build --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test --configuration Release --no-build --verbosity normal --parallel --blame-hang-timeout 60s

      - name: Upload Test Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: logs/

  release:
    runs-on: windows-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Project
        run: dotnet build --configuration Release --no-restore

      - name: Publish Application
        run: dotnet publish --configuration Release --output ./publish

      - name: Create ZIP Archive
        run: |
          mkdir artifacts
          Compress-Archive -Path ./publish/* -DestinationPath ./artifacts/StarCraftKeyManager.zip

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            This release contains the latest build of StarCraft Key Manager.
            Download the ZIP file below, extract it, and run the application.
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/StarCraftKeyManager.zip
          asset_name: StarCraftKeyManager.zip
          asset_content_type: application/zip
